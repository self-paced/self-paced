// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

generator erd {
  provider = "prisma-erd-generator"
  theme    = "default"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MessageEvent {
  id                String             @id @default(uuid())
  title             String             @db.VarChar(100)
  segmentId         String             @db.VarChar(100)
  segmentTitle      String             @db.VarChar(100)
  content           Json
  createdAt         DateTime           @default(now()) @db.Timestamp(0)
  updatedAt         DateTime           @default(now()) @updatedAt @db.Timestamp(0)
  userMessageEvents UserMessageEvent[]
}

model UserMessageEvent {
  id               String            @id @default(uuid())
  ecfId            Int
  email            String            @db.VarChar(100)
  isRead           Boolean           @db.TinyInt
  createdAt        DateTime          @default(now()) @db.Timestamp(0)
  updatedAt        DateTime          @default(now()) @updatedAt @db.Timestamp(0)
  messageEvent     MessageEvent      @relation(fields: [messageEventId], references: [id])
  messageEventId   String
  userMessageLinks UserMessageLink[]
}

model UserMessageLink {
  id                        String                    @id @default(uuid())
  createdAt                 DateTime                  @default(now()) @db.Timestamp(0)
  updatedAt                 DateTime                  @default(now()) @updatedAt @db.Timestamp(0)
  userMessageEvent          UserMessageEvent          @relation(fields: [userMessageEventId], references: [id])
  userMessageEventId        String
  UserMessageLinkActivities UserMessageLinkActivity[]
}

model UserMessageLinkActivity {
  id                String          @id @default(uuid())
  type              String          @db.VarChar(100)
  content           Json
  createdAt         DateTime        @default(now()) @db.Timestamp(0)
  updatedAt         DateTime        @default(now()) @updatedAt @db.Timestamp(0)
  userMessageLink   UserMessageLink @relation(fields: [userMessageLinkId], references: [id])
  userMessageLinkId String
}
